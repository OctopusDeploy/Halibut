sequenceDiagram
    participant A as Client A<br/>(RPC Caller)
    participant R as Redis<br/>(Shared Queue)
    participant B as Client B<br/>(Service Handler)
    participant S as Polling Service<br/>(e.g., Tentacle)
    
    Note over B,S: Service connected to Client B
    B->>R: 1. Subscribe to "RequestMessage Pulse Channel"
    
    Note over A: RPC Call Initiated
    A->>R: 2. Subscribe to "ResponseMessage Channel" (by GUID)
    A->>R: 3. Store RequestMessage in hash (key: GUID)
    A->>R: 4. Add GUID to polling client queue
    A->>R: 5. Pulse "RequestMessage Pulse Channel"
    
    R->>B: 6. Pulse notification received
    B->>R: 7. Dequeue GUID from polling client queue
    B->>R: 8. Get & delete RequestMessage (atomic)
    
    Note over B,S: Request Processing
    B->>S: 9. Send request to service
    S->>B: 10. Return response
    
    B->>R: 11. Store ResponseMessage in hash (key: GUID)
    B->>R: 12. Pulse "ResponseMessage Channel"
    
    R->>A: 13. Response pulse notification
    A->>R: 14. Read ResponseMessage
    A->>A: 15. Return from QueueAndWait()
    
    rect rgb(200, 255, 200)
        Note over A,S: âœ… RPC Successfully Completed<br/>Across Multiple Clients
    end

